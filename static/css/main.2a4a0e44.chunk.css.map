{"version":3,"sources":["index.scss","App.scss","../node_modules/rfs/scss.scss","PageWrapper.scss","EmojiPicker.scss","AvatarMaker.scss","AvatarCreation.scss","FittingRoom.scss","Modal.scss","PictureFrame.scss"],"names":[],"mappings":"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","file":"main.2a4a0e44.chunk.css","sourcesContent":[":root {\n  --main: #2a0172;\n  --secondary: #9068d4;\n  --circus-red: #d44343;\n  --circus-blue: #4bb1df;\n  --circus-yellow: #f0f73c;\n  --pastel-green: #90c978;\n}\n\nhtml {\n  font-size: 62.5%;\n  box-sizing: border-box;\n}\n\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: var(--main);\n  color: white;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n","@import \"~rfs/scss\";\n\n.element--hide {\n  position: fixed;\n  opacity: 0;\n}\n\n.cont {\n  display: flex;\n}\n\n.cont--direction-col {\n  flex-direction: column;\n}\n\n.cont--align-center {\n  align-items: center;\n}\n\n.cont--justify-center {\n  justify-content: center;\n}\n\n.modal__character {\n  @include font-size(50px);\n}\n\n.App {\n  text-align: center;\n}\n\n.btn--hidden {\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: $rfs-base-value / ($rfs-base-value * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{$value / ($value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{$value / ($value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: $value / ($value * 0 + if($unit == px, 1, 1 / $rfs-rem-value));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{$value / $rfs-rem-value}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + (abs($value) - $rfs-base-value) / $rfs-factor;\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{$value-min / $rfs-rem-value}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{$value-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n",".wrapper_container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n// @media only screen and (min-width: 950px) {\n//   .wrapper_container {\n//     margin: 0 150px;\n//   }\n// }\n\n// @media only screen and (min-width: 1250px) {\n//   .wrapper_container {\n//     margin: 0 300px;\n//   }\n// }\n",".emoji-fieldset {\n  position: relative;\n  font-size: calc(1.2rem + 1.5vw);\n  margin: 1rem 0rem;\n  padding-top: 2rem;\n  border: none;\n}\n\n.emoji-fieldset__optn {\n  padding: 1rem;\n  margin: 0.2rem;\n  border-radius: 1.2rem;\n  box-shadow: 0.1rem 0.1rem 0.1rem black;\n  background: var(--lighter-purple);\n}\n\n.emoji-fieldset__optn--selected {\n  background: #83c7dd54;\n  border: 0.2rem solid var(--circus-yellow);\n}\n\n.emoji-fieldset__optn--not-selected {\n  border: 0.2rem solid var(--secondary);\n}\n\n@media only screen and (min-width: 900px) {\n  .emoji-fieldset {\n    font-size: 2.6rem;\n  }\n}\n",".create-emoji {\n  width: 100%;\n  padding: 1rem 0 0 0;\n}\n\nbutton,\ninput {\n  -webkit-appearance: none;\n}\n\n.create-emoji__btn,\n.create-emoji__btn--final {\n  flex-basis: 50%;\n  margin: 0 0.2rem;\n  flex: 0 0 13rem;\n  border: none;\n  background: var(--circus-blue);\n  color: black;\n  padding: 1rem;\n  border-radius: 0.3rem;\n}\n\n.create-emoji__btn--final {\n  background: var(--pastel-green);\n}\n\n.create-emoji__btn:focus {\n  outline: none;\n}\n\n.create-emoji__input {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  font-size: 1.6rem;\n  width: 100%;\n  max-width: 34rem;\n  background: var(--main);\n  text-align: center;\n  color: white;\n  border: unset;\n  border-bottom: 0.2rem solid var(--secondary);\n}\n\n.create-emoji__input::placeholder {\n  color: white;\n}\n\n.create-emoji__input:focus {\n  outline: none;\n}\n\n.create-emoji__input:focus::placeholder {\n  color: transparent;\n}\n",".avatar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.avatar > li > span {\n  text-shadow: 0 0 1rem black;\n}\n",".fitting-room {\n  position: relative;\n  height: 55vh;\n  max-height: 45rem;\n  width: 100%;\n  background: grey;\n  border-radius: 3px;\n}\n\n.fitting-room__mirror {\n  position: absolute;\n  left: calc(50% - 100px);\n  top: 10%;\n  height: 75%;\n  width: 200px;\n  background: var(--circus-blue);\n  box-shadow: -1px 1px 5px #3b3a3a;\n  border-radius: 3px;\n}\n\n.fitting-room__character {\n  line-height: 1.2;\n  font-size: 4.9rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.fitting-room__pole {\n  position: relative;\n  top: 10px;\n  width: 100%;\n  height: 10px;\n  background: silver;\n  z-index: 2;\n}\n\n.fitting-room__drapes {\n  position: absolute;\n  right: 100%;\n  top: 10px;\n  height: 100%;\n  width: 40px;\n  background: repeating-linear-gradient(\n    90deg,\n    darkred 0%,\n    var(--circus-red) 1%,\n    darkred 20%\n  );\n  border-radius: 10px;\n  z-index: 1;\n}\n\n.fitting-room__drapes--left {\n  right: 0;\n  box-shadow: 0px 5px 10px black;\n}\n\n.fitting-room__drapes--right {\n  left: 0;\n  box-shadow: -2px 5px 10px black;\n}\n\n.fitting-room__apparel-item {\n  font-size: 70px;\n}\n\n@media only screen and (min-width: 320px) {\n  .fitting-room {\n    max-width: 340px;\n  }\n}\n\n@media only screen and (min-height: 772px) {\n  .fitting-room__character {\n    font-size: 5.5rem;\n  }\n}\n\n@media only screen and (min-height: 930px) {\n  .fitting-room__character {\n    font-size: 6.5rem;\n  }\n}\n",".modal {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 99;\n}\n\n.modal > :first-child {\n  margin: 5rem auto;\n}\n",".frame {\n  position: relative;\n  width: 35rem;\n  //width: 350px;\n  background: white;\n  border: 3rem solid saddlebrown;\n}\n\n.frame__photo {\n  padding: 2rem 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 0.8rem solid rgb(173, 173, 173);\n  font-size: 4.9rem;\n  text-align: center;\n  color: black;\n}\n\n.frame__photo__copy-btn {\n  border: none;\n  margin: 2rem 0 0 0;\n  background: var(--pastel-green);\n  padding: 1rem;\n  width: 20rem;\n  border-radius: 1rem;\n}\n\n.frame__photo__close {\n  height: 4rem;\n  width: 4rem;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  border-radius: 0.8rem;\n  background: var(--circus-red);\n  color: white;\n  box-shadow: 0 0 0.2rem black;\n}\n"]}